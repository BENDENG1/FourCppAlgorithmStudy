#include<iostream>
using namespace std;
int DPList[100001];
int DP(const int &T) {
	if (DPList[T] != NULL) {
		return DPList[T]%9901;
	}//1과 2의 처리
	if (T < 3) {
		return DPList[T]%9901;
	}
	for (int i = 3; i <=T; i++) {
		DPList[i] = DP(i - 1) * 2 + DP(i - 2);
	}
	
	return DPList[T]%9901;
}

int main() {
	int Lion(0);
	DPList[1] = 3;
	DPList[2] = 7;
	cin >> Lion;
	cout << DP(Lion);
}
//1 0
//0 0
//0 0
//0 0
//1개 였을때 모든 칸수
//1 0 0 0      1 0  0 0
//0 1 0 0      0 0  1 0
//0 0 1 0      1 0  0 0
//0 0 0 1 * 2   0 0  1 0
//두개 였을때 
//1 0
//0 1
//1 0
//0 0
//
//1 0
//0 1
//1 0
//0 1
//* 2
//
//2 * 1 행렬일대 2개
//DP(1) = 3
//2 * 2 행렬일때
//1 0 0 1
//0 0 0 0
//
//0 0  0 0
//1 0  0 1
//
//1 0   0 1
//0 1   1 0
//
//DP(2) = 7
//1 0 0 1 0 0  0 0  0 0  0 0
//0 0 0 0 1 0  0 1  0 0  0 0
//0 0 0 0 0 0 0 0   1 0  0 1
//6개
//0 1  1 0  1 0   0 1
//1 0  0 1  0 1   1 0
//0 0  0 0  0 0   0 0
//4개
//0 1 0 1 1 0 1 0
//0 0 0 0 0 0 0 0
//1 0 0 1 1 0 0 1
//4개
//0 1 1 0
//1 0 0 1
//0 1 1 0
//2개
//DP(3) = 17개
//DP(3) = DP(2) * 2 DP(1) * 2
//14 + 3
//16
//DP(4) = DP(3) * 2 + DP(2)
//34       7